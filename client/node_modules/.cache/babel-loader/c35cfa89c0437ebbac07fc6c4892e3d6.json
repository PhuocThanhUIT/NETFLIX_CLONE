{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\H\\u1EE9aPh\\u01B0\\u1EDBcThanh\\\\Pictures\\\\NETFLIX_CLONE\\\\client\\\\src\\\\components\\\\list\\\\List.jsx\",\n    _s = $RefreshSig$();\n\nimport { ArrowBackIosOutlined, ArrowForwardIosOutlined } from \"@material-ui/icons\";\nimport { useRef, useState } from \"react\";\nimport ListItem from \"../listItem/ListItem\";\nimport \"./list.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction List({\n  list\n}) {\n  _s();\n\n  const [isMoved, setIsMoved] = useState(false);\n  const [slideNumber, setSlideNumber] = useState(0);\n  const listRef = useRef();\n\n  const handleClick = direction => {\n    setIsMoved(true);\n    let distance = listRef.current.getBoundingClientRect().x - 50;\n\n    if (direction === \"left\" && slideNumber > 0) {\n      setSlideNumber(slideNumber - 1);\n      listRef.current.style.transform = `translateX(${230 + distance}px)`;\n    }\n\n    if (direction === \"right\" && slideNumber < 5) {\n      setSlideNumber(slideNumber + 1);\n      listRef.current.style.transform = `translateX(${-230 + distance}px)`;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"listTitle\",\n      children: list.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(ArrowBackIosOutlined, {\n        className: \"sliderArrow left\",\n        onClick: () => handleClick(\"left\"),\n        style: {\n          display: !isMoved && \"none\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        ref: listRef,\n        children: list.map((item, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n          index: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ArrowForwardIosOutlined, {\n        className: \"sliderArrow right\",\n        onClick: () => handleClick(\"right\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(List, \"Iv9XOTedsWAPfmI4OhMVBoYJvBs=\");\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/HứaPhướcThanh/Pictures/NETFLIX_CLONE/client/src/components/list/List.jsx"],"names":["ArrowBackIosOutlined","ArrowForwardIosOutlined","useRef","useState","ListItem","List","list","isMoved","setIsMoved","slideNumber","setSlideNumber","listRef","handleClick","direction","distance","current","getBoundingClientRect","x","style","transform","title","display","map","item","i"],"mappings":";;;AAAA,SAASA,oBAAT,EAA+BC,uBAA/B,QAA8D,oBAA9D;AACA,SAASC,MAAT,EAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,aAAP;;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAsB;AAAA;;AAClB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAMQ,OAAO,GAAGT,MAAM,EAAtB;;AACA,QAAMU,WAAW,GAAIC,SAAD,IAAe;AAC/BL,IAAAA,UAAU,CAAC,IAAD,CAAV;AACA,QAAIM,QAAQ,GAAGH,OAAO,CAACI,OAAR,CAAgBC,qBAAhB,GAAwCC,CAAxC,GAA4C,EAA3D;;AACA,QAAIJ,SAAS,KAAK,MAAd,IAAwBJ,WAAW,GAAG,CAA1C,EAA6C;AAC3CC,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACAE,MAAAA,OAAO,CAACI,OAAR,CAAgBG,KAAhB,CAAsBC,SAAtB,GAAmC,cAAa,MAAML,QAAS,KAA/D;AACD;;AACD,QAAID,SAAS,KAAK,OAAd,IAAyBJ,WAAW,GAAG,CAA3C,EAA8C;AAC5CC,MAAAA,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd;AACAE,MAAAA,OAAO,CAACI,OAAR,CAAgBG,KAAhB,CAAsBC,SAAtB,GAAmC,cAAa,CAAC,GAAD,GAAOL,QAAS,KAAhE;AACD;AACF,GAXH;;AAYF,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA,gBAA6BR,IAAI,CAACc;AAAlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI,QAAC,oBAAD;AACI,QAAA,SAAS,EAAC,kBADd;AAEI,QAAA,OAAO,EAAE,MAAKR,WAAW,CAAC,MAAD,CAF7B;AAGI,QAAA,KAAK,EAAG;AAACS,UAAAA,OAAO,EAAE,CAACd,OAAD,IAAY;AAAtB;AAHZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAEI,OAAhC;AAAA,kBACGL,IAAI,CAACgB,GAAL,CAAS,CAACC,IAAD,EAAMC,CAAN,kBACR,QAAC,QAAD;AAAU,UAAA,KAAK,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cANJ,eAWI,QAAC,uBAAD;AAAyB,QAAA,SAAS,EAAC,mBAAnC;AAAuD,QAAA,OAAO,EAAE,MAAKZ,WAAW,CAAC,OAAD;AAAhF;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAlCQP,I;;KAAAA,I;AAoCT,eAAeA,IAAf","sourcesContent":["import { ArrowBackIosOutlined, ArrowForwardIosOutlined } from \"@material-ui/icons\";\r\nimport { useRef,useState } from \"react\";\r\nimport ListItem from \"../listItem/ListItem\";\r\nimport \"./list.scss\";\r\n\r\nfunction List({list}) {\r\n    const [isMoved, setIsMoved] = useState(false);\r\n    const [slideNumber, setSlideNumber] = useState(0);\r\n    const listRef = useRef()\r\n    const handleClick = (direction) => {\r\n        setIsMoved(true);\r\n        let distance = listRef.current.getBoundingClientRect().x - 50;\r\n        if (direction === \"left\" && slideNumber > 0) {\r\n          setSlideNumber(slideNumber - 1);\r\n          listRef.current.style.transform = `translateX(${230 + distance}px)`;\r\n        }\r\n        if (direction === \"right\" && slideNumber < 5) {\r\n          setSlideNumber(slideNumber + 1);\r\n          listRef.current.style.transform = `translateX(${-230 + distance}px)`;\r\n        }\r\n      };\r\n  return (\r\n    <div className=\"list\">\r\n        <span className=\"listTitle\">{list.title}</span>\r\n        <div className=\"wrapper\">\r\n            <ArrowBackIosOutlined \r\n                className=\"sliderArrow left\" \r\n                onClick={() =>handleClick(\"left\")}\r\n                style ={{display: !isMoved && \"none\"} }\r\n            />\r\n            <div className=\"container\" ref={listRef}>\r\n              {list.map((item,i)=>(\r\n                <ListItem index={i}/>\r\n              ))}   \r\n            </div>\r\n            <ArrowForwardIosOutlined className=\"sliderArrow right\" onClick={() =>handleClick(\"right\")}/>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List"]},"metadata":{},"sourceType":"module"}